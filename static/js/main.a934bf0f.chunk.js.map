{"version":3,"sources":["lib/MDSelect/subcomponents/icons/index.js","lib/MDSelect/subcomponents/MDDropdown.js","lib/MDSelect/subcomponents/MDSpinner.js","lib/index.js","lib/MDSelect/MDSelect.js","module/index.js","index.js"],"names":["Icon","name","height","width","fill","className","x","y","viewBox","d","style","transform","MDDropdown","items","onSelectItem","selectedItem","selectedItems","customLabel","multiple","isSelected","item","find","_item","key","map","i","onClick","e","Fragment","label","char","charAt","toUpperCase","renderLabel","MDSpinner","MDSelect","options","type","value","onChange","config","asyncOptions","isSimple","useState","setSelectedItem","setSelectedItems","active","setActive","typing","setTyping","showDropdown","setShowDropdown","setItems","paddingLeft","setPaddingLeft","RANDOM_ID","Math","random","toFixed","ref","useRef","chipRefs","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_value","mapConfig","Array","isArray","pl","reduce","curr","acc","offsetWidth","option","itemKey","itemLabel","removeItem","filteredItems","filter","htmlFor","onFocus","_options","_option","_searchValue","includes","handleChange","id","k","el","length","_items","push","__item","countries","capital","population","flag","cities","App","country","setCountry","city","setCity","selectedCities","setSelectedCities","selectedCountries","setSelectedCountries","val","filterValue","callback","setTimeout","c","toLowerCase","src","alt","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a934bf0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Icon = ({ name, height = '20px', width = '20px', fill = '#000' }) => {\r\n\tconst icons = {\r\n\t\t'arrow-up': (\r\n\t\t\t<svg className=\"icon\" height={height} width={width} fill={fill} x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n\t\t\t\t<path d=\"M149 299h214l-107 -107z\" />\r\n\t\t\t</svg>\r\n\t\t),\r\n\t\t'remove': (\r\n\t\t\t<svg className=\"icon\" height={height} width={width} fill={fill} x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t<path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\" />\r\n\t\t\t</svg>\r\n\t\t),\r\n\t\t'check':(\r\n\t\t\t<svg className=\"icon\" style={{transform:'rotate(180deg)'}} height={height} width={width} fill={fill} x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n\t\t\t<path d=\"M192 167l226 226l30 -30l-256 -256l-119 119l30 30z\" />\r\n\t\t</svg>\r\n\t\t)\r\n\t};\r\n\treturn icons[name];\r\n};\r\n","import React from 'react';\r\nimport { Icon } from './icons';\r\n\r\nconst MDDropdown = ({ items, onSelectItem, selectedItem, selectedItems, multiple,customLabel }) => {\r\n\tconst renderLabel = item => {\r\n\t\tif(customLabel){\r\n\t\t\treturn customLabel(item)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{[...item.label].map((char, i) => {\r\n\t\t\t\t\treturn selectedItem.label.charAt(i).toUpperCase() === char.toUpperCase() ? (\r\n\t\t\t\t\t\t<span className=\"md-select__dropdown-item--highlighted\" key={'l' + i}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span key={'l' + i}>{char}</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\tconst isSelected = item => {\r\n\t\treturn selectedItems.find(_item => _item.key === item.key);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"md-select__dropdown\">\r\n\t\t\t{items.map((item, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`md-select__dropdown-item ${isSelected(item) &&\r\n\t\t\t\t\t\t\t'md-select__dropdown-item--selected'}`}\r\n\t\t\t\t\t\tkey={'item' + i}\r\n\t\t\t\t\t\tonClick={e => onSelectItem(e, item)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span>{renderLabel(item)}</span>\r\n\t\t\t\t\t\t{/* {isSelected(item) ? <Icon name=\"check\" /> : <span />} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MDDropdown;\r\n","import React from 'react';\r\n\r\nconst MDSpinner = () => {\r\n    return <div className=\"md-spinner\"></div>;\r\n}\r\n\r\n\r\n\r\nexport default MDSpinner;","import MDSelect from './MDSelect'\n\nexport default MDSelect;","import React, { useState, useEffect } from 'react';\r\nimport { Icon } from './subcomponents/icons';\r\nimport MDDropdown from './subcomponents/MDDropdown';\r\nimport MDSpinner from './subcomponents/MDSpinner';\r\nimport './style.scss';\r\nimport { useRef } from 'react';\r\nconst MDSelect = ({\r\n\toptions,\r\n\tlabel,\r\n\ttype = 'standard',\r\n\tvalue,\r\n\tonChange,\r\n\tconfig,\r\n\tmultiple,\r\n\trenderLabel,\r\n\tasyncOptions,\r\n\tisSimple,\r\n}) => {\r\n\tconst [selectedItem, setSelectedItem] = useState({ label: '', key: '' });\r\n\tconst [selectedItems, setSelectedItems] = useState([]);\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst [typing, setTyping] = useState(false);\r\n\tconst [showDropdown, setShowDropdown] = useState(false);\r\n\tconst [items, setItems] = useState([]);\r\n\tconst [paddingLeft, setPaddingLeft] = useState(0);\r\n\tconst RANDOM_ID = `mds${(Math.random() * 10000).toFixed()}`;\r\n\tlet ref = {\r\n\t\t['dropdown' + RANDOM_ID]: null,\r\n\t};\r\n\tref['dropdown' + RANDOM_ID] = useRef(null);\r\n\r\n\tconst chipRefs = useRef([]);\r\n\tuseEffect(() => {\r\n\t\t/**\r\n\t\t * Alert if clicked on outside of element\r\n\t\t */\r\n\t\tfunction handleClickOutside(event) {\r\n\t\t\tif (ref['dropdown' + RANDOM_ID].current && !ref['dropdown' + RANDOM_ID].current.contains(event.target)) {\r\n\t\t\t\tsetShowDropdown(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Bind the event listener\r\n\t\tdocument.addEventListener('mousedown', handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\t// Unbind the event listener on clean up\r\n\t\t\tdocument.removeEventListener('mousedown', handleClickOutside);\r\n\t\t};\r\n\t}, [ref, RANDOM_ID]);\r\n\t/**\r\n\t *\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tlet _value = { label: '', key: '' };\r\n\r\n\t\t_value = mapConfig(Array.isArray(value) ? '' : value);\r\n\r\n\t\tsetSelectedItem(_value);\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tsetActive(selectedItem.label ? true : false);\r\n\t}, [selectedItem]);\r\n\r\n\tuseEffect(() => {\r\n\t\r\n\t\tlet pl = chipRefs.current.reduce((curr,acc)=>{\r\n\r\n\t\t\treturn curr+=acc.offsetWidth+4;\r\n\t\t},0);\r\n\r\n\t\tsetPaddingLeft(pl);\r\n\t}, [selectedItems]);\r\n\tuseEffect(() => {\r\n\t\tsetItems(\r\n\t\t\t!asyncOptions\r\n\t\t\t\t? options.map(option => {\r\n\t\t\t\t\t\toption = { ...option, ...mapConfig(option) };\r\n\t\t\t\t\t\treturn option;\r\n\t\t\t\t  })\r\n\t\t\t\t: []\r\n\t\t);\r\n\t}, [config, options]);\r\n\r\n\t/****\r\n\t *\r\n\t */\r\n\r\n\tconst mapConfig = _value => {\r\n\t\treturn isSimple\r\n\t\t\t? {\r\n\t\t\t\t\tkey: _value,\r\n\t\t\t\t\tlabel: _value,\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\tkey: _value ? _value[config.itemKey ? config.itemKey : 'value'] : '',\r\n\t\t\t\t\tlabel: _value ? _value[config.itemLabel ? config.itemLabel : 'label'] : '',\r\n\t\t\t  };\r\n\t};\r\n\tconst onfocus = () => {\r\n\t\tsetActive(true);\r\n\t\tsetShowDropdown(true);\r\n\t};\r\n\r\n\tconst handleChange = e => {\r\n\t\tif (asyncOptions) {\r\n\t\t\te.target.value ? setTyping(true) : setTyping(false);\r\n\r\n\t\t\tasyncOptions(e.target.value, _options => {\r\n\t\t\t\tsetTyping(false);\r\n\t\t\t\tsetItems(\r\n\t\t\t\t\t_options.map(option => {\r\n\t\t\t\t\t\toption = { ...option, ...mapConfig(option) };\r\n\t\t\t\t\t\treturn option;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetItems(\r\n\t\t\t\toptions\r\n\t\t\t\t\t.filter(_option => {\r\n\t\t\t\t\t\tlet _searchValue = e.target.value.toUpperCase();\r\n\r\n\t\t\t\t\t\treturn _option.label.toUpperCase().includes(_searchValue);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(option => {\r\n\t\t\t\t\t\toption = { ...option, ...mapConfig(option) };\r\n\t\t\t\t\t\treturn option;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tsetSelectedItem({ key: '', label: e.target.value });\r\n\t};\r\n\tconst selectItem = (e, item) => {\r\n\t\t//e.stopPropagation();\r\n\t\tif (multiple) {\r\n\t\t\tlet _items = [...selectedItems];\r\n\t\t\tlet alreadExists = _items.find(_item => _item.key === item.key);\r\n\r\n\t\t\tif (alreadExists) {\r\n\t\t\t\tremoveItem(item);\r\n\t\t\t} else {\r\n\t\t\t\t_items.push(item);\r\n\t\t\t\tsetSelectedItems(_items);\r\n\t\t\t\tonChange(isSimple ? _items.map(__item => __item.label) : _items);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetSelectedItem(item);\r\n\t\t\tsetShowDropdown(false);\r\n\t\t\tonChange(isSimple ? item.label : item);\r\n\t\t}\r\n\t};\r\n\tconst remove = () => {\r\n\t\tsetSelectedItem({ label: '', key: '' });\r\n\t};\r\n\r\n\tconst removeItem = item => {\r\n\t\tlet _items = [...selectedItems];\r\n\t\tlet filteredItems = _items.filter(_item => {\r\n\t\t\treturn _item.key !== item.key;\r\n\t\t});\r\n\t\tsetSelectedItems(filteredItems);\r\n\r\n\t\tonChange(filteredItems);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t */\r\n\treturn (\r\n\t\t<div className={`md-select ${'md-select-' + type}`}>\r\n\t\t\t<label htmlFor={RANDOM_ID} className={`md-select__label ${active ? 'md-select__label--active' : ''}`}>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tvalue={selectedItem.label}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tstyle={{ paddingLeft: paddingLeft + 'px' }}\r\n\t\t\t\tclassName=\"md-select__input\"\r\n\t\t\t\tonFocus={() => onfocus()}\r\n\t\t\t\tonChange={e => handleChange(e)}\r\n\t\t\t\tid={RANDOM_ID}\r\n\t\t\t/>\r\n\t\t\t{asyncOptions && active && typing && (\r\n\t\t\t\t<span className=\"md-select__spinner\">\r\n\t\t\t\t\t<MDSpinner />\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t\t{multiple && (\r\n\t\t\t\t<div className=\"md-select__chips\">\r\n\t\t\t\t\t{selectedItems.map((item, k) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tk < 2 && (\r\n\t\t\t\t\t\t\t\t<div className=\"md-chip\" key={'si' + k} ref={el => (chipRefs.current[k] = el)}>\r\n\t\t\t\t\t\t\t\t\t<span className=\"md-chip__text\">{item.label}</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"md-chip__close\" onClick={() => removeItem(item)}>\r\n\t\t\t\t\t\t\t\t\t\t<Icon name=\"remove\" fill=\"#aaa\" />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{selectedItems.length > 2 && (\r\n\t\t\t\t\t\t<div className=\"md-chip md-chip--small\" onClick={() => setShowDropdown(true)} ref={el => (chipRefs.current[2] = el)}>\r\n\t\t\t\t\t\t\t<div className=\"md-chip__text\">+{selectedItems.length - 2}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{active && !multiple && !asyncOptions && (\r\n\t\t\t\t<span\r\n\t\t\t\t\tonClick={() => remove()}\r\n\t\t\t\t\tclassName={`md-select__remove ${active ? 'md-select__remove--active' : ''}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon name=\"remove\" />\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t\t<span className={`md-select__arrow ${active ? 'md-select__arrow--active' : ''}`}>\r\n\t\t\t\t<Icon name=\"arrow-up\" />\r\n\t\t\t</span>\r\n\r\n\t\t\t<div\r\n\t\t\t\tref={ref['dropdown' + RANDOM_ID]}\r\n\t\t\t\tid={'dropdown' + RANDOM_ID}\r\n\t\t\t\tclassName={`md-select__dropdown-wrp ${showDropdown ? 'md-select__dropdown-wrp--active' : ''}`}\r\n\t\t\t>\r\n\t\t\t\t<MDDropdown\r\n\t\t\t\t\titems={items}\r\n\t\t\t\t\tonSelectItem={selectItem}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tselectedItem={selectedItem}\r\n\t\t\t\t\tselectedItems={selectedItems}\r\n\t\t\t\t\tcustomLabel={renderLabel}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MDSelect;\r\n","import React from 'react';\r\nimport MDSelect from '../lib';\r\nimport { useState } from 'react';\r\nimport './app.scss';\r\nconst countries = [\r\n\t{\r\n\t\tname: 'Afghanistan',\r\n\t\tcapital: 'Kabul',\r\n\t\tpopulation: 27657145,\r\n\t\tflag: 'https://restcountries.eu/data/afg.svg',\r\n\t},\r\n\t{\r\n\t\tname: 'Åland Islands',\r\n\t\tcapital: 'Mariehamn',\r\n\t\tpopulation: 28875,\r\n\t\tflag: 'https://restcountries.eu/data/ala.svg',\r\n\t},\r\n\t{\r\n\t\tname: 'Albania',\r\n\t\tcapital: 'Tirana',\r\n\t\tpopulation: 2886026,\r\n\t\tflag: 'https://restcountries.eu/data/alb.svg',\r\n\t},\r\n\t{\r\n\t\tname: 'Algeria',\r\n\t\tcapital: 'Algiers',\r\n\t\tpopulation: 40400000,\r\n\t\tflag: 'https://restcountries.eu/data/dza.svg',\r\n\t},\r\n];\r\n\r\nconst cities = ['Aflou', 'Tlemcen', 'Annaba', 'Rabat', 'Cairo', 'Madrid', 'Zurich', 'Moskow', 'Beijin'];\r\n\r\nconst config = {\r\n\titemLabel: 'name',\r\n\titemKey: 'name',\r\n};\r\n\r\nconst App = () => {\r\n\tconst [country, setCountry] = useState(null);\r\n\tconst [city, setCity] = useState('');\r\n\tconst [selectedCities, setSelectedCities] = useState([]);\r\n\tconst [selectedCountries, setSelectedCountries] = useState(null);\r\n\tconst handleChange = val => {\r\n\t\tsetCountry(val);\r\n\t};\r\n\r\n\tconst handleChangeCity = val => {\r\n\t\r\n\t\tsetCity(val);\r\n\t};\r\n\tconst handleChangeMultiCities = val => {\r\n\t\tconsole.log('--------cities------------')\r\n\t\tconsole.log(val)\r\n\t\tconsole.log('--------------------')\r\n\t\tsetSelectedCities(val);\r\n\t};\r\n\tconst handleChangeMulti = val => {\r\n\t\tsetSelectedCountries(val);\r\n\t};\r\n\r\n\tconst fetchCountries = (filterValue, callback) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcallback(countries.filter(c => c.name.toLowerCase().includes(filterValue.toLowerCase())));\r\n\t\t}, 4000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app-demo\">\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\tasyncOptions={fetchCountries}\r\n\t\t\t\t\tlabel=\"Async\"\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\tlabel=\"Custom rendering\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\trenderLabel={item => (\r\n\t\t\t\t\t\t<div className=\"app-demo_custom-label\">\r\n\t\t\t\t\t\t\t<img src={item.flag} alt=\"flag\" height=\"24px\" width=\"32px\" />\r\n\t\t\t\t\t\t\t<span>{item.label}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\tlabel=\"Multiple\"\r\n\t\t\t\t\tvalue={selectedCountries}\r\n\t\t\t\t\tonChange={handleChangeMulti}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\ttype=\"solo\"\r\n\t\t\t\t\tlabel=\"Solo\"\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\ttype=\"outlined\"\r\n\t\t\t\t\tlabel=\"Outlined\"\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\ttype=\"filled\"\r\n\t\t\t\t\tlabel=\"Filled\"\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\tlabel=\"Standard\"\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tconfig={config}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect options={cities} label=\"Simple select\" value={city} onChange={handleChangeCity} isSimple />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"app-demo__item\">\r\n\t\t\t\t<MDSelect multiple options={cities} label=\"Simple multi select\" value={selectedCities} onChange={handleChangeMultiCities} isSimple />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './module';\nReactDOM.render( <App/>, document.getElementById('root') );"],"sourceRoot":""}